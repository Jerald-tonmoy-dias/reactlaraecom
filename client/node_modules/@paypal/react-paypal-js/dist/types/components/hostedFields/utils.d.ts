import { DATA_NAMESPACE } from "../../constants";
import type { ReactChild, ReactFragment, ReactPortal } from "react";
import type { PayPalHostedFieldsNamespace, PayPalHostedFieldOptions } from "../../types/payPalHostedFieldTypes";
declare type PayPalHostedFieldOption = {
    [key: string]: PayPalHostedFieldOptions;
};
/**
 * Throw an exception if the HostedFields is not found in the paypal namespace
 * Probably cause for this problem is not sending the hosted-fields string
 * as part of the components props in options
 * {@code <PayPalScriptProvider options={{ components: 'hosted-fields'}}>}
 *
 * @param param0 and object containing the components and namespace defined in options
 * @throws {@code Error}
 *
 */
export declare const generateMissingHostedFieldsError: ({ components, [DATA_NAMESPACE]: dataNamespace, }: PayPalHostedFieldsNamespace) => string;
/**
 * Identify all the valid hosted fields children and generate the valid options
 * to use in the HostedFields.render process
 *
 * @param childrenList     the list of children received
 * @param possibleChildren a list of child type to transform into fields format
 * @returns the fields object required to render the HostedFields
 */
export declare const generateHostedFieldsFromChildren: (childrenList: (ReactChild | ReactPortal | ReactFragment)[]) => PayPalHostedFieldOption;
export {};
